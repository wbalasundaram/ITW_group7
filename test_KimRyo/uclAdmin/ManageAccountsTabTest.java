package test;

import java.io.IOException;
import java.text.ParseException;
import java.util.List;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;

import ConnectionManager.ApproveCharityRequests;
import ConnectionManager.Charity;
import ConnectionManager.EditAccounts;

/*
 * This test case is for the uclAdmin.jsp, manage account tab.
 * This tests that the table generated by the jsp program contains
 * the equivalent data in the xml file (represents DB data)
 */
public class ManageAccountsTabTest {
	WebDriver driver;

	@Before
	public void setUp(){
		//driver = new HtmlUnitDriver();

		//driver = new FirefoxDriver();

		System.setProperty("webdriver.chrome.driver","lib/chromedriver/chromedriver.exe");
		driver = new ChromeDriver();
	}

	@Test
	public void test() {
        driver.get("http://localhost:8080/CharityWare/uclAdmin.jsp");

        List<Charity> charityFromXML;
		try {
			// get data from xml
			charityFromXML = EditAccounts.httpGet("http://localhost:8080/CharityWare/REST/charity/charities");
			String charityNameFromXML = charityFromXML.get(0).getCharityName();
			String charityEmailFromXML = charityFromXML.get(0).getEmail();

			WebElement tab = driver.findElement(By.id("tab_2"));
			tab.click();

			WebElement manageAccounts = driver.findElement(By.id("content_2"));
			WebElement manageAccountsTable = manageAccounts.findElement(By.xpath("form/table/tbody"));

			// get data from web page
			WebElement charityName = manageAccountsTable.findElement(By.xpath("tr[2]/td[2]"));
			WebElement charityEmail = manageAccountsTable.findElement(By.xpath("tr[2]/td[3]"));
			WebElement purpose = manageAccountsTable.findElement(By.xpath("tr[2]/td[4]"));

			Assert.assertTrue("charity name match", charityName.getText().equals(charityNameFromXML));
			Assert.assertTrue("charity email match", charityEmail.getText().equals(charityEmailFromXML));

			if(charityFromXML.get(0).getCharityDescription() != null){
				String purposeFromXML = charityFromXML.get(0).getCharityDescription().trim();
				Assert.assertTrue("puropse match", purpose.getText().trim().equals(purposeFromXML));
			}
//			else{
//				Assert.fail("charity description is null");
//			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@After
	public void close(){
		driver.close();
	}

}
